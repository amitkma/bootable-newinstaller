# By 
# Luoyuan Xiao     <xiaoluoyuan@163.com>
# Yu Chen          <yuchen@tsinghua.edu.cn>
# Last updated 2016/08/03
#
# License: GNU Public License
#

# for update

rebooting()
{
	dialog --title " PrimeOS Rebooting... " --nocancel --pause "" 8 41 1
	sync
	umount -a
	reboot -f
}

progress_bar()
{
	which dialog > /dev/null 2>&1
	if [ $? -ne 0 ]; then
	     echo "$1  $2"
	else
	     dialog --clear --title " $1 " --gauge "\n $2" 8 70
	fi
}

update_detect()
{
	echo update_detect ....

	if [ !\( mountpoint -q /mnt -a -e /mnt/android*/kernel \) ]; then
		echo "Cannot find PrimeOS partition "
		return 255
	fi
	
	for adir in /mnt/android* ; do
        detect_dir=$adir/data/media/0/System_Os
		detect_file=$detect_dir/update
    	iso_name=$(tac $detect_file | sed -n 2p )
    	iso_file=$detect_dir/$iso_name
        	echo $iso_name $iso_file
     	value=`tail -n 1 $detect_file`
     	if [ "$value"x = "1"x -a -e $iso_file ]; then
         
			echo "Update newest OPENTHOS $iso_file... "

			if [ !\( mountpoint -q /mnt -a -a $1/kernel \) ]; then
				#update failed. change update file's last line conetent to -2
				sed -i '$d' $detect_file
	            echo -2 >>$detect_file
				echo "Update failed! Please check enough free disk space to update newest OPENTHOS." 
				rebooting
	    	fi

			unzip -o $iso_file -d $detect_dir
			mkdir /update
			mount -t tmpfs tmpfs /update
	        mkdir -p /update/sfs
			mkdir -p /update/system
			mount -o loop $detect_dir/system.sfs /update/sfs
			mount -o loop /update/sfs/system.img /update/system
			cp -af /update/system $adir/
			# cp f /update/ramdisk.img $adir
			# cp f /update/kernel $adir
			# cp f /update/initrd.img $adir
		
			#rm some old cache files
			rm -rf $adir/data/dalvik-cache/* $adir/data/system/wpa_supplicant
			sync
		
			if [ -e $adir/kernel ]; then
	    		# update complete. change update file's last line conetent to 0
				sed -i '$d' $detect_file
	    		echo 0 >>$detect_file
	    		echo "Finished updateing $iso_name.\nRebooting the system."
	     		rebooting
	     	fi
	    fi
	done
}


